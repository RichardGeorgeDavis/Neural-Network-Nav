function Neuron(e,t,n){this.connection=[],this.receivedSignal=!1,this.lastSignalRelease=0,this.releaseDelay=0,this.fired=!1,this.firedCount=0,this.prevReleaseAxon=null,THREE.Vector3.call(this,e,t,n)}function Signal(e,t,n){this.minSpeed=t,this.maxSpeed=n,this.speed=THREE.Math.randFloat(this.minSpeed,this.maxSpeed),this.alive=!0,this.t=null,this.startingPoint=null,this.axon=null,this.particle=e.getParticle(),THREE.Vector3.call(this)}function ParticlePool(e){this.spriteTextureSignal=TEXTURES.electric,this.poolSize=e,this.pGeom=new THREE.Geometry,this.particles=this.pGeom.vertices,this.offScreenPos=new THREE.Vector3(9999,9999,9999),this.pColor="#930000",this.pSize=1;for(var t=0;t<this.poolSize;t++)this.particles[t]=new Particle(this);this.meshComponents=new THREE.Object3D,this.pMat=new THREE.PointCloudMaterial({map:this.spriteTextureSignal,size:this.pSize,color:this.pColor,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0}),this.pMesh=new THREE.PointCloud(this.pGeom,this.pMat),this.pMesh.frustumCulled=!1,this.meshComponents.add(this.pMesh),this.pMat_outer=this.pMat.clone(),this.pMat_outer.size=10*this.pSize,this.pMat_outer.opacity=.025,this.pMesh_outer=new THREE.PointCloud(this.pGeom,this.pMat_outer),this.pMesh_outer.frustumCulled=!1,this.meshComponents.add(this.pMesh_outer)}function Particle(e){this.particlePool=e,this.available=!0,THREE.Vector3.call(this,this.particlePool.offScreenPos.x,this.particlePool.offScreenPos.y,this.particlePool.offScreenPos.z)}function Axon(e,t){this.bezierSubdivision=8,this.neuronA=e,this.neuronB=t,this.cpLength=e.distanceTo(t)/THREE.Math.randFloat(1.5,4),this.controlPointA=this.getControlPoint(e,t),this.controlPointB=this.getControlPoint(t,e),THREE.CubicBezierCurve3.call(this,this.neuronA,this.controlPointA,this.controlPointB,this.neuronB),this.vertices=this.getSubdividedVertices()}function Connection(e,t){this.axon=e,this.startingPoint=t}function NeuralNetwork(){this.initialized=!1,this.settings={verticesSkipStep:4,maxAxonDist:8,maxConnectionsPerNeuron:6,signalMinSpeed:1.75,signalMaxSpeed:3.25,currentMaxSignals:8e3,limitSignals:12e3},this.meshComponents=new THREE.Object3D,this.particlePool=new ParticlePool(this.settings.limitSignals),this.meshComponents.add(this.particlePool.meshComponents),this.components={neurons:[],allSignals:[],allAxons:[]},this.axonOpacityMultiplier=1,this.axonColor="#934d00",this.axonGeom=new THREE.BufferGeometry,this.axonPositions=[],this.axonIndices=[],this.axonNextPositionsIndex=0,this.axonUniforms={color:{type:"c",value:new THREE.Color(this.axonColor)},opacityMultiplier:{type:"f",value:this.axonOpacityMultiplier}},this.axonAttributes={opacity:{type:"f",value:[]}},this.neuronSizeMultiplier=2,this.spriteTextureNeuron=TEXTURES.electric,this.neuronColor="#a76c00",this.neuronOpacity=1,this.neuronsGeom=new THREE.Geometry,this.neuronUniforms={sizeMultiplier:{type:"f",value:this.neuronSizeMultiplier},opacity:{type:"f",value:this.neuronOpacity},texture:{type:"t",value:this.spriteTextureNeuron}},this.neuronAttributes={color:{type:"c",value:[]},size:{type:"f",value:[]}},this.neuronShaderMaterial=new THREE.ShaderMaterial({uniforms:this.neuronUniforms,attributes:this.neuronAttributes,vertexShader:null,fragmentShader:null,blending:THREE.AdditiveBlending,transparent:!0,depthTest:!1}),this.numNeurons=0,this.numAxons=0,this.numSignals=0,this.numPassive=0,this.initNeuralNetwork()}Neuron.prototype=Object.create(THREE.Vector3.prototype),Neuron.prototype.connectNeuronTo=function(e){var t=new Axon(this,e);return this.connection.push(new Connection(t,"A")),e.connection.push(new Connection(t,"B")),t},Neuron.prototype.createSignal=function(e,t,n){this.firedCount+=1,this.receivedSignal=!1;for(var i=[],o=0;o<this.connection.length;o++)if(this.connection[o].axon!==this.prevReleaseAxon){var r=new Signal(e,t,n);r.setConnection(this.connection[o]),i.push(r)}return i},Neuron.prototype.reset=function(){this.receivedSignal=!1,this.lastSignalRelease=0,this.releaseDelay=0,this.fired=!1,this.firedCount=0},Signal.prototype=Object.create(THREE.Vector3.prototype),Signal.prototype.setConnection=function(e){this.startingPoint=e.startingPoint,this.axon=e.axon,"A"===this.startingPoint?this.t=0:"B"===this.startingPoint&&(this.t=1)},Signal.prototype.travel=function(e){var t;"A"===this.startingPoint?(this.t+=this.speed*e,this.t>=1&&(this.t=1,this.alive=!1,this.axon.neuronB.receivedSignal=!0,this.axon.neuronB.prevReleaseAxon=this.axon)):"B"===this.startingPoint&&(this.t-=this.speed*e,this.t<=0&&(this.t=0,this.alive=!1,this.axon.neuronA.receivedSignal=!0,this.axon.neuronA.prevReleaseAxon=this.axon)),t=this.axon.getPointAt(this.t),this.particle.set(t.x,t.y,t.z)},ParticlePool.prototype.getAvgExecutionTime=function(){return this.profTime/this.itt},ParticlePool.prototype.getParticle=function(){for(var e=0;e<this.poolSize;e++){var t=this.particles[e];if(t.available)return this.lastAvailableIdx=e,t.available=!1,t}return console.error("ParticlePool.prototype.getParticle return null"),null},ParticlePool.prototype.update=function(){this.pGeom.verticesNeedUpdate=!0},ParticlePool.prototype.updateSettings=function(){this.pMat.color.setStyle(this.pColor),this.pMat.size=this.pSize,this.pMat_outer.color.setStyle(this.pColor),this.pMat_outer.size=10*this.pSize},Particle.prototype=Object.create(THREE.Vector3.prototype),Particle.prototype.free=function(){this.available=!0,this.set(this.particlePool.offScreenPos.x,this.particlePool.offScreenPos.y,this.particlePool.offScreenPos.z)},Axon.prototype=Object.create(THREE.CubicBezierCurve3.prototype),Axon.prototype.getSubdividedVertices=function(){return this.getSpacedPoints(this.bezierSubdivision)},Axon.prototype.getControlPoint=function(e,t){var n=(new THREE.Vector3).copy(t).sub(e).normalize(),i=new THREE.Vector3(0,0,1),o=(new THREE.Vector3).crossVectors(i,n).normalize(),r=n.angleTo(i),s=(new THREE.Matrix4).makeRotationAxis(o,r),a=Math.cos(THREE.Math.degToRad(45)),l=THREE.Math.randFloat(a,1),u=THREE.Math.randFloat(0,2*Math.PI),h=Math.sqrt(1-l*l),c=new THREE.Vector3(h*Math.cos(u),h*Math.sin(u),l);return c.multiplyScalar(this.cpLength),c.applyMatrix4(s),c.add(e),c},NeuralNetwork.prototype.initNeuralNetwork=function(){this.initNeurons(OBJ_MODELS.brain.geometry.vertices),this.initAxons(),this.neuronShaderMaterial.vertexShader=SHADER_CONTAINER.neuronVert,this.neuronShaderMaterial.fragmentShader=SHADER_CONTAINER.neuronFrag,this.axonShaderMaterial.vertexShader=SHADER_CONTAINER.axonVert,this.axonShaderMaterial.fragmentShader=SHADER_CONTAINER.axonFrag,this.initialized=!0},NeuralNetwork.prototype.initNeurons=function(e){var t;for(t=0;t<e.length;t+=this.settings.verticesSkipStep){var n=e[t],i=new Neuron(n.x,n.y,n.z);this.components.neurons.push(i),this.neuronsGeom.vertices.push(i)}for(t=0;t<this.components.neurons.length;t++)this.neuronAttributes.color.value[t]=new THREE.Color("#a76c00"),this.neuronAttributes.size.value[t]=THREE.Math.randFloat(.75,3);this.neuronParticles=new THREE.PointCloud(this.neuronsGeom,this.neuronShaderMaterial),this.meshComponents.add(this.neuronParticles),this.neuronShaderMaterial.needsUpdate=!0},NeuralNetwork.prototype.initAxons=function(){for(var e=this.components.neurons.length,t=0;t<e;t++)for(var n=this.components.neurons[t],o=t+1;o<e;o++){var r=this.components.neurons[o];if(n!==r&&n.distanceTo(r)<this.settings.maxAxonDist&&n.connection.length<this.settings.maxConnectionsPerNeuron&&r.connection.length<this.settings.maxConnectionsPerNeuron){var s=n.connectNeuronTo(r);this.constructAxonArrayBuffer(s)}}renderer.getContext().getExtension("OES_element_index_uint")||console.error("32bit index buffer not supported!");var a=new Uint32Array(this.axonIndices),l=new Float32Array(this.axonPositions),u=new Float32Array(this.axonAttributes.opacity.value);this.axonGeom.addAttribute("index",new THREE.BufferAttribute(a,1)),this.axonGeom.addAttribute("position",new THREE.BufferAttribute(l,3)),this.axonGeom.addAttribute("opacity",new THREE.BufferAttribute(u,1)),this.axonGeom.computeBoundingSphere(),this.axonShaderMaterial=new THREE.ShaderMaterial({uniforms:this.axonUniforms,attributes:this.axonAttributes,vertexShader:null,fragmentShader:null,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0}),this.axonMesh=new THREE.Line(this.axonGeom,this.axonShaderMaterial,THREE.LinePieces),this.meshComponents.add(this.axonMesh);var h=0;for(i=0;i<e;i++)this.components.neurons[i].connection[0]||(h+=1);console.log("numNotConnected =",h)},NeuralNetwork.prototype.update=function(e){if(this.initialized){var t,n,i=Date.now();for(n=0;n<this.components.neurons.length;n++)t=this.components.neurons[n],this.components.allSignals.length<this.settings.currentMaxSignals-this.settings.maxConnectionsPerNeuron&&t.receivedSignal&&t.firedCount<8&&(t.fired=!0,t.lastSignalRelease=i,t.releaseDelay=THREE.Math.randInt(100,1e3),this.releaseSignalAt(t)),t.receivedSignal=!1;0===this.components.allSignals.length&&(this.resetAllNeurons(),this.releaseSignalAt(this.components.neurons[THREE.Math.randInt(0,this.components.neurons.length)]));for(var o=this.components.allSignals.length-1;o>=0;o--){var r=this.components.allSignals[o];if(r.travel(e),!r.alive){r.particle.free();for(var s=this.components.allSignals.length-1;s>=0;s--)if(r===this.components.allSignals[s]){this.components.allSignals.splice(s,1);break}}}this.particlePool.update(),this.updateInfo()}},NeuralNetwork.prototype.constructAxonArrayBuffer=function(e){this.components.allAxons.push(e);for(var t=e.vertices,n=0;n<t.length;n++){if(this.axonPositions.push(t[n].x,t[n].y,t[n].z),n<t.length-1){var i=this.axonNextPositionsIndex;this.axonIndices.push(i,i+1);var o=THREE.Math.randFloat(.005,1.2);this.axonAttributes.opacity.value.push(o,o)}this.axonNextPositionsIndex+=1}},NeuralNetwork.prototype.releaseSignalAt=function(e){for(var t=e.createSignal(this.particlePool,this.settings.signalMinSpeed,this.settings.signalMaxSpeed),n=0;n<t.length;n++){var i=t[n];this.components.allSignals.push(i)}},NeuralNetwork.prototype.resetAllNeurons=function(){this.numPassive=0;for(var e=0;e<this.components.neurons.length;e++)n=this.components.neurons[e],n.fired||(this.numPassive+=1),n.reset()},NeuralNetwork.prototype.updateInfo=function(){this.numNeurons=this.components.neurons.length,this.numAxons=this.components.allAxons.length,this.numSignals=this.components.allSignals.length},NeuralNetwork.prototype.updateSettings=function(){for(this.neuronUniforms.opacity.value=this.neuronOpacity,i=0;i<this.components.neurons.length;i++)this.neuronAttributes.color.value[i].setStyle(this.neuronColor);this.neuronAttributes.color.needsUpdate=!0,this.neuronUniforms.sizeMultiplier.value=this.neuronSizeMultiplier,this.axonUniforms.color.value.set(this.axonColor),this.axonUniforms.opacityMultiplier.value=this.axonOpacityMultiplier,this.particlePool.updateSettings()},NeuralNetwork.prototype.testChangOpcAttr=function(){for(var e=this.axonGeom.attributes.opacity.array,t=0;t<e.length;t++)e[t]=THREE.Math.randFloat(0,.5);this.axonGeom.attributes.opacity.needsUpdate=!0};var loadingManager=new THREE.LoadingManager;loadingManager.onLoad=function(){document.getElementById("loading").style.display="none",console.log("Done."),main()},loadingManager.onProgress=function(e,t,n){console.log(t+"/"+n,e)};var shaderLoader=new THREE.XHRLoader(loadingManager);shaderLoader.setResponseType("text"),shaderLoader.loadMultiple=function(e,t){_.each(t,(function(t,n){shaderLoader.load(t,(function(t){e[n]=t}))}))};var SHADER_CONTAINER={};shaderLoader.loadMultiple(SHADER_CONTAINER,{neuronVert:"shaders/neuron.vert",neuronFrag:"shaders/neuron.frag",axonVert:"shaders/axon.vert",axonFrag:"shaders/axon.frag"});var OBJ_MODELS={},OBJloader=new THREE.OBJLoader(loadingManager);OBJloader.load("models/brain_vertex_low.obj",(function(e){OBJ_MODELS.brain=e.children[0]}));var container,stats,scene,light,camera,cameraCtrl,renderer,TEXTURES={},textureLoader=new THREE.TextureLoader(loadingManager);textureLoader.load("sprites/electric.png",(function(e){TEXTURES.electric=e})),Detector.webgl||Detector.addGetWebGLMessage();var WIDTH=window.innerWidth,HEIGHT=window.innerHeight,pixelRatio=window.devicePixelRatio||1,screenRatio=WIDTH/HEIGHT,clock=new THREE.Clock,FRAME_COUNT=0,sceneSettings={pause:!1,bgColor:162678,enableGridHelper:!1,enableAxisHelper:!1};container=document.getElementById("canvas-container"),scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(25,screenRatio,10,5e3),(cameraCtrl=new THREE.OrbitControls(camera,container)).object.position.y=150,cameraCtrl.update(),(renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0})).setSize(WIDTH,HEIGHT),renderer.setPixelRatio(pixelRatio),renderer.autoClear=!1,container.appendChild(renderer.domElement),stats=new Stats,container.appendChild(stats.domElement);var gridHelper=new THREE.GridHelper(600,50);gridHelper.setColors(48127,16777215),gridHelper.material.opacity=.1,gridHelper.material.transparent=!0,gridHelper.position.y=-300,scene.add(gridHelper);var gui,gui_info,gui_settings,axisHelper=new THREE.AxisHelper(50);function updateHelpers(){axisHelper.visible=sceneSettings.enableAxisHelper,gridHelper.visible=sceneSettings.enableGridHelper}function main(){var e=window.neuralNet=new NeuralNetwork;scene.add(e.meshComponents),initGui(),run()}function initGui(){(gui=new dat.GUI).width=300,(gui_info=gui.addFolder("Info")).add(neuralNet,"numNeurons").name("Neurons"),gui_info.add(neuralNet,"numAxons").name("Axons"),gui_info.add(neuralNet,"numSignals",0,neuralNet.settings.limitSignals).name("Signals"),gui_info.autoListen=!1,(gui_settings=gui.addFolder("Settings")).add(neuralNet.settings,"currentMaxSignals",0,neuralNet.settings.limitSignals).name("Max Signals"),gui_settings.add(neuralNet.particlePool,"pSize",.2,2).name("Signal Size"),gui_settings.add(neuralNet.settings,"signalMinSpeed",0,8,.01).name("Signal Min Speed"),gui_settings.add(neuralNet.settings,"signalMaxSpeed",0,8,.01).name("Signal Max Speed"),gui_settings.add(neuralNet,"neuronSizeMultiplier",0,2).name("Neuron Size Mult"),gui_settings.add(neuralNet,"neuronOpacity",0,1).name("Neuron Opacity"),gui_settings.add(neuralNet,"axonOpacityMultiplier",0,5).name("Axon Opacity Mult"),gui_settings.addColor(neuralNet.particlePool,"pColor").name("Signal Color"),gui_settings.addColor(neuralNet,"neuronColor").name("Neuron Color"),gui_settings.addColor(neuralNet,"axonColor").name("Axon Color"),gui_settings.addColor(sceneSettings,"bgColor").name("Background"),gui_info.open(),gui_settings.open();for(var e=0;e<gui_settings.__controllers.length;e++)gui_settings.__controllers[e].onChange(updateNeuralNetworkSettings)}function updateNeuralNetworkSettings(){neuralNet.updateSettings(),neuralNet.settings.signalMinSpeed>neuralNet.settings.signalMaxSpeed&&(neuralNet.settings.signalMaxSpeed=neuralNet.settings.signalMinSpeed,gui_settings.__controllers[3].updateDisplay())}function updateGuiInfo(){for(var e=0;e<gui_info.__controllers.length;e++)gui_info.__controllers[e].updateDisplay()}function update(){if(updateHelpers(),!sceneSettings.pause){var e=clock.getDelta();neuralNet.update(e),updateGuiInfo()}}function run(){requestAnimationFrame(run),renderer.clear(),update(),renderer.render(scene,camera),stats.update(),FRAME_COUNT++}scene.add(axisHelper);var animate=function(){scene.rotation.x-=.001,scene.rotation.y+=.001,scene.rotation.z-=5e-4,renderer.render(scene,camera),requestAnimationFrame(animate)};function onWindowResize(){WIDTH=window.innerWidth,HEIGHT=window.innerHeight,pixelRatio=window.devicePixelRatio||1,screenRatio=WIDTH/HEIGHT,camera.aspect=screenRatio,camera.updateProjectionMatrix(),renderer.setSize(WIDTH,HEIGHT),renderer.setPixelRatio(pixelRatio)}animate(),window.addEventListener("keypress",(function(e){switch(e.keyCode){case 32:sceneSettings.pause=!sceneSettings.pause;break;case 65:case 97:sceneSettings.enableGridHelper=!sceneSettings.enableGridHelper;break;case 83:case 115:sceneSettings.enableAxisHelper=!sceneSettings.enableAxisHelper}})),$((function(){var e;$(window).resize((function(){clearTimeout(e),e=setTimeout((function(){onWindowResize()}),250)}))}));
//# sourceMappingURL=app-bg-min.js.map